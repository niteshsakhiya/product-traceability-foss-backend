apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{ .Values.namespace | default .Release.Namespace }}
  name: {{ include "product-traceability-foss-backend.fullname" . }}
  labels:
    {{- include "product-traceability-foss-backend.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "product-traceability-foss-backend.selectorLabels" . | nindent 6 }}
  revisionHistoryLimit: 2
  template:
    metadata:
      namespace: {{ .Values.namespace | default .Release.Namespace }}
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "product-traceability-foss-backend.selectorLabels" . | nindent 8 }}
    spec:
      automountServiceAccountToken: false
      {{- if .Values.imagePullSecret.dockerconfigjson }}
      imagePullSecrets:
        - name: {{ include "product-traceability-foss-backend.fullname" . }}-imagepullsecret
      {{- else }}
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- end }}
      serviceAccountName: {{ include "product-traceability-foss-backend.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.springprofile | quote }}
            - name: MAILSERVER_HOST
              value: {{ .Values.mailserver.host | quote }}
            - name: MAILSERVER_PORT
              value: {{ .Values.mailserver.port | quote }}
            - name: MAILSERVER_USERNAME
              value: {{ .Values.mailserver.username | quote }}
            - name: MAILSERVER_PASSWORD
              value: {{ .Values.mailserver.password | quote }}
            - name: KEYCLOAK_OAUTH2_CLIENT_ID
              value: {{ .Values.keycloak.oauth2.clientId | quote }}
            - name: KEYCLOAK_OAUTH2_CLIENT_SECRET
              value: {{ .Values.keycloak.oauth2.clientSecret | quote }}
            - name: SPRING_DATASOURCE_URL
              value: {{ .Values.datasource.url | quote }}
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.datasource.username | quote }}
            - name: SPRING_DATASOURCE_PASSWORD
              value: {{ .Values.datasource.password | quote }}
            - name: JAVA_TOOL_OPTIONS
              value: {{ .Values.javaToolOptions | default "" | quote }}
            {{- range $key, $val := .Values.env }}
            - name: {{ $key }}
              value: {{ $val | quote }}
            {{- end }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          # @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes
        {{- if .Values.healthCheck.enabled }}
          livenessProbe:
            httpGet:
              path: "/actuator/health/liveness"
              port: 8081
              scheme: HTTP
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.livenessProbe.failureThreshold }}
          # @url: https://cloud.google.com/blog/products/containers-kubernetes/kubernetes-best-practices-setting-up-health-checks-with-readiness-and-liveness-probes
          readinessProbe:
            httpGet:
              path: "/actuator/health/readiness"
              port: 8081
              scheme: HTTP
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.readinessProbe.failureThreshold }}
        {{- end }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
