name: "Pull request"

on:
  pull_request:
    paths-ignore:
      - '**.md'
      - 'docs/**'

env:
  REGISTRY: ghcr.io
  JAVA_VERSION: 17
  COMMIT_SHA: ${{ github.event.pull_request.head.sha }}

jobs:
  Dependency-analysis:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Dependency rules report # possible severity values: <'fail'|'warn'|'ignore'>
        run: ./gradlew buildHealth -Pdependency.analysis=warn -Pdependency.analysis.clear.artifacts=false

      - name: Dependency analysis report
        run: cat build/reports/dependency-analysis/build-health-report.txt

  Unit-test:
    permissions:
      checks: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Run unit tests
        run: ./gradlew test

      - name: Publish unit test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "./build/test-results/test/*.xml"
          check_name: "Unit Test Results"

  Integration-test:
    permissions:
      checks: write
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Run integration tests
        run: ./gradlew integrationTest

      - name: Publish integration test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: "./build/test-results/integrationTest/*.xml"
          check_name: "Integration Test Results"

  Publish-docker-image:
    needs: ["Unit-test", "Integration-test"]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-java@v3
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Build docker image
        run: ./gradlew clean jibDockerBuild --image=${{ env.REGISTRY }}/${{ github.repository }}:${{ env.COMMIT_SHA }}

      - name: Login to Docker Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push docker image
        run: docker push ${{ env.REGISTRY }}/${{ github.repository }}:${{ env.COMMIT_SHA }}

  Sonar-Cloud-analyze:
    needs: ["Unit-test", "Integration-test"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis

      - uses: actions/setup-java@v3
        with:
          java-version: '${{ env.JAVA_VERSION }}'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Cache SonarCloud packages
        uses: actions/cache@v1
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build and analyze
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: ./gradlew build sonarqube --info
